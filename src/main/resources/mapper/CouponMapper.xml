<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chenxi.bzbb.domain.dao.CouponMapper" >
  <resultMap id="BaseResultMap" type="com.chenxi.bzbb.domain.model.Coupon" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="requirement" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="reduction" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="createtime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="expire" jdbcType="DATE" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, requirement, reduction, createtime, expire
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chenxi.bzbb.domain.model.CouponExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from coupon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from coupon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chenxi.bzbb.domain.model.CouponExample" >
    delete from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chenxi.bzbb.domain.model.Coupon" >
    insert into coupon (id, name, requirement, 
      reduction, createtime, expire
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{requirement,jdbcType=DECIMAL}, 
      #{reduction,jdbcType=DECIMAL}, #{createtime,jdbcType=TIMESTAMP}, #{expire,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chenxi.bzbb.domain.model.Coupon" >
    insert into coupon
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="requirement != null" >
        requirement,
      </if>
      <if test="reduction != null" >
        reduction,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="expire != null" >
        expire,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null" >
        #{requirement,jdbcType=DECIMAL},
      </if>
      <if test="reduction != null" >
        #{reduction,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="expire != null" >
        #{expire,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chenxi.bzbb.domain.model.CouponExample" resultType="java.lang.Integer" >
    select count(*) from coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update coupon
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.requirement != null" >
        requirement = #{record.requirement,jdbcType=DECIMAL},
      </if>
      <if test="record.reduction != null" >
        reduction = #{record.reduction,jdbcType=DECIMAL},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expire != null" >
        expire = #{record.expire,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update coupon
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      requirement = #{record.requirement,jdbcType=DECIMAL},
      reduction = #{record.reduction,jdbcType=DECIMAL},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      expire = #{record.expire,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chenxi.bzbb.domain.model.Coupon" >
    update coupon
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="requirement != null" >
        requirement = #{requirement,jdbcType=DECIMAL},
      </if>
      <if test="reduction != null" >
        reduction = #{reduction,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="expire != null" >
        expire = #{expire,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chenxi.bzbb.domain.model.Coupon" >
    update coupon
    set name = #{name,jdbcType=VARCHAR},
      requirement = #{requirement,jdbcType=DECIMAL},
      reduction = #{reduction,jdbcType=DECIMAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      expire = #{expire,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>